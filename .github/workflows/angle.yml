name: Build ANGLE Libs
on:
  push:
    branches:
      - master
      - angle-or-devil

env:
  ANGLE_VERSION: 4484

jobs:
  angle-build:
    name: ${{ matrix.name }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "Windows", os: "windows-2019", arch: "x86", extension: "dll" }
          - { name: "Windows", os: "windows-2019", arch: "x64", extension: "dll" }
          - { name: "macOS", os: "macos-10.15", arch: "x64", extension: "dylib" }
          - { name: "macOS", os: "macos-10.15", arch: "arm64", extension: "dylib" }
          - { name: "Linux", os: "ubuntu-latest", arch: "x64", extension: "so" }
    steps:
    - name: Clone ANGLE
      run: |
        git clone https://github.com/google/angle.git
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    - name: Fetch Cached third_party
      id: third-party-cache
      uses: actions/cache@v2
      with:
        path: angle/third_party/
        key: thirdparty-${{ env.ANGLE_VERSION }}-${{ matrix.os }}

    - name: Fetch Cached angle/tools
      id: angle-tools-cache
      uses: actions/cache@v2
      with:
        path: angle/tools/
        key: angletools-${{ env.ANGLE_VERSION }}-${{ matrix.os }}

    - name: Fetch Cached depot_tools
      id: depot-tools-cache
      uses: actions/cache@v2
      with:
        path: depot_tools/
        key: depot-tools-${{ env.ANGLE_VERSION }}-${{ matrix.os }}

    - name: Install Depot Tools
      if: steps.depot-tools-cache.outputs.cache-hit != true
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
      shell: bash

    - name: Build ANGLE
      run: |
        export PATH=$PWD/depot_tools:$PATH
        cd angle
        git checkout chromium/${{ env.ANGLE_VERSION }}
        python ./scripts/bootstrap.py
        gclient sync
        gn gen out/${{ matrix.arch }} --args='is_debug=false dcheck_always_on=false target_cpu="${{ matrix.arch }}"'
        ninja -C out/${{ matrix.arch }} libEGL libGLESv2
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      shell: bash

    - name: Upload Artifact (libGLESv2)
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: ${{ matrix.name }}-${{ matrix.arch }}-libGLESv2
        path: angle/out/${{ matrix.arch }}/libGLESv2.${{ matrix.extension }}
        if-no-files-found: error

    - name: Upload Artifact (libEGL)
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: ${{ matrix.name }}-${{ matrix.arch }}-libEGL
        path: angle/out/${{ matrix.arch }}/libEGL.${{ matrix.extension }}
        if-no-files-found: error

  angle-upload:
    name: Push ANGLE Libraries
    needs: [angle-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: angle-or-devil

      - name: Download Artifacts From Build
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: angle.yml
          path: angle/

      - name: Commit & Push ANGLE Libraries
        uses: actions-js/push@master
        with:
          branch: angle-or-devil
          message: "GHA: built and updated ANGLE to ${{ env.ANGLE_VERSION }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

