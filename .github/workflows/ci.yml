name: 'Taisei CI Build Tests'
on:
  push:
    branches:
      - master
      - v1.*
    tags:
      - v1.*
    paths:
      - "**.c"
      - "**.h"
      - "**.yml"
      - "**.yaml"
      - "**.build"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.yml"
      - "**.yaml"
      - "**.build"

# TODO: pin this to a stable version once patches are upstreamed
env:
  EM_VERSION: 'latest'
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  linux-test-build:
    name: "Linux CI Test Build"
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Build Tools (apt)
      run: >
        sudo apt update

        sudo apt install -y -qq
        build-essential
        libsdl2-dev
        libogg-dev
        libopusfile-dev
        libpng-dev
        libzip-dev
        libx11-dev
        libwayland-dev
        python3-docutils
        libwebp-dev
        libfreetype6-dev
        libzstd-dev

        pip install
        meson==0.55.3
        ninja
        zstandard

    - name: Configure (Meson)
      run: >
        meson setup build/
        --prefix=$(pwd)/build-test
        --native-file ci/linux-x86_64-build-test-ci.ini

    - name: Build & Install
      run: |
        meson compile -C build/ --verbose
        meson install -C build/

    - name: Run Test
      run: $(pwd)/build-test/bin/taisei -R $(pwd)/misc/tests/test-replay.tsr
      env:
        TAISEI_NOPRELOAD: 0
        TAISEI_PRELOAD_REQUIRED: 1

    - name: Upload Log
      uses: actions/upload-artifact@v2
      with:
        name: taisei_linux_fail_log
        path: build/meson-logs/meson-log.txt
        if-no-files-found: warn

  macos-test-build:
    name: "macOS CI Test Build"
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: macos-10.15
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set Up Build Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Build Tools
      run: >
        brew install
        gcc
        pkg-config
        docutils
        pygments
        freetype2
        libzip
        opusfile
        libvorbis
        webp
        sdl2
        ninja

        pip install
        meson==0.55.3
        ninja
        zstandard

    - name: Configure (Meson)
      run: >
        meson setup build/
        --native-file ci/macos-x86_64-build-test-ci.ini
        --prefix=$(pwd)/build-test

    - name: Build & Install
      run: |
        meson compile -C build/ --verbose
        meson install -C build/

    - name: Run Test
      run: $(pwd)/build-test/Taisei.app/Contents/MacOS/Taisei -R $(pwd)/misc/tests/test-replay.tsr
      env:
        TAISEI_NOPRELOAD: 0
        TAISEI_PRELOAD_REQUIRED: 1

    - name: Upload Log
      uses: actions/upload-artifact@v2
      with:
        name: taisei_macos_fail_log
        path: build/meson-logs/meson-log.txt
        if-no-files-found: warn

  windows-test-build:
    name: "Windows CI Test Build"
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04
    container: mstorsjo/llvm-mingw:20210423 # cross-compiler with mingw
    steps:
    - name: Install tools (Apt)
      run: >
        apt update

        apt install -y -qq software-properties-common

        add-apt-repository ppa:git-core/ppa -y

        apt install -y -qq
        python3-docutils
        python3-pip
        git
        nsis

        pip3 install
        meson==0.55.3
        ninja
        zstandard

    - name: Checkout Code (Git)
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Configure Taisei (Meson)
      run: >
        meson setup build/
        --prefix=$(pwd)/build-test
        --cross-file ci/windows-llvm_mingw-x86_64-build-test-ci.ini

    - name: Build & Install
      run: |
        meson compile -C build/ --verbose
        meson install -C build/

    - name: Upload Log
      uses: actions/upload-artifact@v2
      with:
        name: taisei_windows_fail_log
        path: build/meson-logs/meson-log.txt
        if-no-files-found: warn

  emscripten-test-build:
    name: "Emscripten CI Test Build"
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: macos-10.15
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set Up Build Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Build Tools
      run: >
        brew install
        gcc
        pkg-config
        docutils
        pygments
        freetype2
        libzip
        opusfile
        libvorbis
        webp
        sdl2
        ninja

        pip install
        meson==0.55.3
        ninja
        zstandard

    - name: Setup cache
      id: cache-system-libraries
      uses: actions/cache@v2
      with:
        path: ${{env.EM_CACHE_FOLDER}}
        key: ${{env.EM_VERSION}}-${{ runner.os }}

    - name: Setup emsdk
      uses: mymindstorm/setup-emsdk@v9
      with:
        version: ${{env.EM_VERSION}}
        actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

    - name: Verify emsdk
      run: emcc -v

    - name: Configure (Meson)
      run: >
        meson setup build/
        --cross-file ci/emscripten-build-test-ci.ini
        --prefix=$(pwd)/build-test

        meson configure
        -Dbuild.cpp_std=gnu++14
        build/

    - name: Build & Install
      run: |
        meson compile -C build/ --verbose
        meson install -C build/

    - name: Upload Log
      uses: actions/upload-artifact@v2
      with:
        name: taisei_emscripten_fail_log
        path: build/meson-logs/meson-log.txt
        if-no-files-found: warn
