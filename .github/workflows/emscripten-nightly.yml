name: Taisei Emscripten Weekly Build
on:
  workflow_dispatch:
  # schedule:
  # - cron: 0 13 * * 1

# TODO: use later fixed version of emscripten when it releases
env:
  EM_VERSION: '2.0.19'
  EM_CACHE_FOLDER: 'emsdk'

jobs:
  emscripten-weekly-build:
    name: Emscripten Weekly Build (WebGL)
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Set Up Build Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Build Tools
      run: >
        sudo apt update || true

        sudo apt install -y -qq
        python3-docutils
        python3-pip
        git

        pip install
        meson==0.56.2
        ninja
        zstandard

    - name: Pull cached emsdk
      id: cache-emsdk
      uses: actions/cache@v2
      with:
        path: ${{ env.EM_CACHE_FOLDER }}
        key: ${{ env.EM_VERSION }}-${{ runner.os }}

    - name: Install emsdk
      if: steps.cache-emsdk.outputs.cache-hit != 'true'
      run: |
        rm -rf emsdk/
        git clone https://github.com/emscripten-core/emsdk.git
        emsdk/emsdk install ${{ env.EM_VERSION }}
        emsdk/emsdk activate ${{ env.EM_VERSION }}

    - name: Verify emsdk
      run: |
        source emsdk/emsdk_env.sh
        emcc -v
        tee misc/ci/emscripten-ephemeral-ci.ini <<EOF >/dev/null
        [constants]
        toolchain = '$(pwd)/emsdk/upstream/emscripten/'
        EOF

    - name: Configure (Meson)
      run: >
        source emsdk/emsdk_env.sh

        meson setup build/
        --cross-file misc/ci/emscripten-ephemeral-ci.ini
        --cross-file misc/ci/emscripten-build-test-ci.ini
        --prefix=$(pwd)/build-weekly

        meson configure
        -Dbuild.cpp_std=gnu++14
        build/

    - name: Build
      run: |
        source emsdk/emsdk_env.sh
        # run twice due to a header race condition with SPIRV-Tools
        meson compile tar -C build/ --verbose || true
        meson compile tar -C build/ --verbose
        meson install -C build/

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.1.1
      with:
        branch: main
        target-folder: ./weekly/
        folder: ./build-weekly/
        repository-name: StarWitch/taisei-emscripten-weekly
        commit-message: "${{ github.repository }}@${{ github.sha }}"
        token: ${{ secrets.DEPLOY_KEY }}

    - name: Upload Log
      uses: actions/upload-artifact@v2
      with:
        name: taisei_emscripten_build_log
        path: build/meson-logs/meson-log.txt
        if-no-files-found: warn

